@page "/mypages/people"

@using System.Net.Http
@using RazorComponentsLibrary
@using BlazorWebAssembly.Models

@inject HttpClient Http
@inject IJSRuntime JSRuntime;

<h1>Employees</h1>

<p>This component demonstrates fetching data from the server.</p>

<Component1 Title="'This is the title'" OnClickCallback="TestOnClick">
    this is the child content
</Component1>

<Component1 Title="'This is the ajlsdhlkjashdkljsahkljsadh title'" OnClickCallback="TestOnClick">
    this is the child content
</Component1>

<EditForm Model="@newPerson" OnValidSubmit="@InsertPerson">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <InputText id="firstName" @bind-Value="newPerson.FirstName" />
        <InputText id="lastName" @bind-Value="newPerson.LastName" />
        <InputText id="emailAddress" @bind-Value="newPerson.EmailAddress" />

        <button type="submit" class="btn btn-primary">Submit</button>
    </EditForm>

@if (people == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var person in people)
            {
                <tr>
                    <td>@person.FirstName</td>
                    <td>@person.LastName</td>
                    <td>@person.EmailAddress</td>
                    <td><button class="btn btn-danger" @onclick="(() => DeletePerson(person.ID))">Delete</button></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Person[] people;
    private DisplayPersonModel newPerson = new DisplayPersonModel();

    protected override async Task OnInitializedAsync()
    {
        people = await Http.GetFromJsonAsync<Person[]>("https://localhost:44383/api/people");
    }

    protected async void TestOnClick()
    {
        await JSRuntime.InvokeVoidAsync("alert", "hey you click it?");
    }

    private async Task InsertPerson()
    {
        Person p = new Person()
        {
            FirstName = newPerson.FirstName,
            LastName = newPerson.LastName,
            EmailAddress = newPerson.EmailAddress
        };

        await Http.PostAsJsonAsync("https://localhost:44383/api/people", p);

        people = await Http.GetFromJsonAsync<Person[]>("https://localhost:44383/api/people");

        newPerson = new DisplayPersonModel();
    }

    private async Task DeletePerson(int id)
    {
        await Http.DeleteAsync($"https://localhost:44383/api/people/{id}");
        people = await Http.GetFromJsonAsync<Person[]>("https://localhost:44383/api/people");
    }

    public class Person
    {
        public int ID { get; set; }

        public string FirstName { get; set; }

        public string LastName { get; set; }

        public string EmailAddress { get; set; }
    }
}
