@page "/Data/People"

@using DataAccessLibrary
@using DataAccessLibrary.Models
@using BlazorServer.Models
@using RazorComponentsLibrary

@inject IPeopleData _db
@inject IJSRuntime JSRuntime;

<h2>People Page</h2>

<Component1 Title="'This is the title'" OnClickCallback="TestOnClick">
    this is the child content
</Component1>

<Component1 Title="'This is the ajlsdhlkjashdkljsahkljsadh title'" OnClickCallback="TestOnClick">
    this is the child content
</Component1>


<h4>Insert New Person</h4>
<EditForm Model="@newPerson" OnValidSubmit="@InsertPerson">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <InputText id="firstName" @bind-Value="newPerson.FirstName" />
    <InputText id="lastName" @bind-Value="newPerson.LastName" />
    <InputText id="emailAddress" @bind-Value="newPerson.EmailAddress" />

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

<h4>Current People</h4>
@if (people is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var person in people)
            {
                <tr>
                    <td>@person.FirstName</td>
                    <td>@person.LastName</td>
                    <td>@person.EmailAddress</td>
                    <td><button class="btn btn-danger" @onclick="(() => DeletePerson(person.ID))">Delete</button></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<PersonModel> people;
    private DisplayPersonModel newPerson = new DisplayPersonModel();

    protected override async Task OnInitializedAsync()
    {
        people = await _db.GetPeople();
    }

    private async Task InsertPerson()
    {
        PersonModel p = new PersonModel()
        {
            FirstName = newPerson.FirstName,
            LastName = newPerson.LastName,
            EmailAddress = newPerson.EmailAddress
        };

        await _db.InsertPerson(p);

        people = await _db.GetPeople();

        newPerson = new DisplayPersonModel();
    }

    private async Task DeletePerson(int id)
    {
        await _db.DeletePerson(id);
        people = await _db.GetPeople();
    }

    protected async void TestOnClick()
    {
        await JSRuntime.InvokeVoidAsync("alert", "hey you click it?");
    }
}
